<?php

/**
 * @file
 * Contains leadgen_widgets.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\image\Entity\ImageStyle;
use Drupal\node\NodeInterface;

/**
 * Implements hook_help().
 */
function leadgen_widgets_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the leadgen_widgets module.
    case 'help.page.leadgen_widgets':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('My Awesome Module') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function leadgen_widgets_theme() {
  $theme = [];

  return $theme;
}

/**
 * Implements hook_preprocess_HOOK().
 */
function leadgen_widgets_preprocess_page(&$variables) {
  if (!empty($variables['node'])) {
    /* @var $node \Drupal\node\NodeInterface */
    $node = $variables['node'];
    if (\Drupal::moduleHandler()->moduleExists('leadgen_layouts')) {
      if (leadgen_layouts_is_fluid($node) && leadgen_widgets_has_header_paragraphs($node)) {
        //@TODO can't do it this way. The block ID is hard-coded. Look at
        // using hook_block_access or hook_block_view_alter.
        hide($variables['page']['header']['leadgen_basic_page_title']);
      }
    }
  }
}

/**
 * Check if the node has the header_paragraphs field, if so, then check if the
 * field is not empty. If header paragraphs exist hide the page title.
 *
 * @param \Drupal\node\NodeInterface $node
 * @return \Drupal\node\NodeInterface
 */
function leadgen_widgets_has_header_paragraphs(NodeInterface $node) {
  if(!empty($node->field_header_paragraphs) && !$node->field_header_paragraphs->isEmpty()) {
    return $node;
  }
}

/**
 * Implements hook_preprocess_paragraph().
 */
function leadgen_widgets_preprocess_paragraph(&$variables) {

}

/**
 * Implements hook_preprocess_paragraph__banner().
 */
function leadgen_widgets_preprocess_paragraph__banner(&$variables) {
  //@TODO Cleanup. Need to fix a better way to do this...
  $paragraph = $variables['paragraph'];

  // If banner image and nested paragraphs are present.
  if (!$paragraph->field_banner_image->isEmpty() && !$paragraph->field_paragraphs->isEmpty()) {
    // Get banner image.
    $banner_image_uri = $paragraph->field_banner_image->entity->getFileUri();
    $banner_image = ImageStyle::load('banner')->buildUrl($banner_image_uri);
    // Add image as background.
    $variables['attributes']['style'][] = 'background-image: url("' . $banner_image . '");';
    $variables['attributes']['style'][] = 'background-size: cover;background-position: center center;';
    // Hide the normal <img> tag.
    hide($variables['content']['field_banner_image']);
  }
  // Check if banner color is empty.
  if (!$paragraph->field_banner_color->isEmpty()) {
    $banner_color = $paragraph->field_banner_color->getValue();
    $banner_color = reset($banner_color);
    $variables['attributes']['style'][] = 'background: ' . $banner_color['color'] . ';';
  }

  // Check if text color is empty.
  if (!$paragraph->field_text_color->isEmpty()) {
    $text_color = $paragraph->field_text_color->getValue();
    $text_color = reset($text_color);
    $variables['attributes']['style'][] = 'color: ' . $text_color['color'] . ';';
  }
}

/**
 * Implements hook_preprocess_paragraph__carousel().
 */
function leadgen_widgets_preprocess_paragraph__carousel(&$variables) {
  //@TODO Cleanup. Need to fix a better way to do this...
  $slides = [];

  $paragraph = $variables['paragraph'];
  if (!$paragraph->field_paragraphs->isEmpty()) {
    $paragraphs = $paragraph->field_paragraphs->referencedEntities();
    foreach ($paragraphs as $slide_paragraph) {

      $item = [];
      if (!$slide_paragraph->field_title->isEmpty()) {
        $item['title'] = $slide_paragraph->field_title->value;
      }
      if (!$slide_paragraph->field_text->isEmpty()) {
        $item['description'] = [
          '#markup' => $slide_paragraph->field_text->value,
        ];
      }

      if (!$slide_paragraph->field_image->isEmpty()) {
        $image_uri = $slide_paragraph->field_image->entity->getFileUri();
        $image = ImageStyle::load('banner')->buildUrl($image_uri);
        // TODO Should use the theme_image or whatever it's called in D8.
        $item['image'] = [
          '#markup' => '<img src="' . $image . '" class="img-responsive center-block" />',
        ];
      }

      if (!empty($item)) {
        $slides[] = $item;
      }
    }

  }
  if(!empty($slides)) {
    $variables['content']['bootstrap_carousel'] = [
      '#theme' => 'bootstrap_carousel',
      '#slides' => $slides,
    ];
    hide($variables['content']['field_paragraphs']);
  }

}